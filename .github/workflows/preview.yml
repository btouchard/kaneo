name: PR Preview Environment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  setup-preview:
    runs-on: self-hosted
    if: github.event.action != 'closed'
    permissions:
      contents: read
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate preview ID
        id: preview
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_ID="pr-${PR_NUMBER}"
          PREVIEW_DOMAIN="${PREVIEW_ID}.preview.kaneo.app"
          API_PREVIEW_DOMAIN="api-${PREVIEW_ID}.preview.kaneo.app"
          echo "preview_id=${PREVIEW_ID}" >> $GITHUB_OUTPUT
          echo "domain=${PREVIEW_DOMAIN}" >> $GITHUB_OUTPUT
          echo "api_domain=${API_PREVIEW_DOMAIN}" >> $GITHUB_OUTPUT

      - name: Build and tag API image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/api/Dockerfile
          push: false
          load: true
          tags: kaneo-api-preview:${{ steps.preview.outputs.preview_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and tag Web image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/web/Dockerfile
          push: false
          load: true
          tags: kaneo-web-preview:${{ steps.preview.outputs.preview_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create preview environment
        run: |
          # Create a directory for this preview
          PREVIEW_DIR="/opt/preview-environments/${{ steps.preview.outputs.preview_id }}"
          mkdir -p $PREVIEW_DIR

          # Clean up any existing containers for this preview
          if [ -f "$PREVIEW_DIR/docker-compose.yml" ]; then
            cd $PREVIEW_DIR
            docker-compose down -v --remove-orphans
          fi

          # Create docker-compose.yml for the preview
          cat > $PREVIEW_DIR/docker-compose.yml << EOF
          version: '3'
          services:
            backend:
              image: kaneo-api-preview:${{ steps.preview.outputs.preview_id }}
              environment:
                JWT_ACCESS: "preview_jwt_token"
                DB_PATH: "/app/apps/api/data/kaneo.db"
              volumes:
                - sqlite_data:/app/apps/api/data
              networks:
                - preview-net
              restart: unless-stopped

            frontend:
              image: kaneo-web-preview:${{ steps.preview.outputs.preview_id }}
              environment:
                KANEO_API_URL: "http://${{ steps.preview.outputs.api_domain }}"
              networks:
                - preview-net
              restart: unless-stopped

          networks:
            preview-net:
              name: ${{ steps.preview.outputs.preview_id }}_network

          volumes:
            sqlite_data:
          EOF

          # Start the preview environment
          cd $PREVIEW_DIR
          docker-compose up -d --force-recreate

          # Create Nginx configuration for this preview
          cat > /opt/nginx-proxy/conf.d/${{ steps.preview.outputs.preview_id }}.conf << EOF
          server {
              listen 80;
              server_name ${{ steps.preview.outputs.domain }};

              location / {
                  proxy_pass http://frontend-${{ steps.preview.outputs.preview_id }}:80;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
              }
          }

          server {
              listen 80;
              server_name ${{ steps.preview.outputs.api_domain }};

              location / {
                  proxy_pass http://backend-${{ steps.preview.outputs.preview_id }}:1337;
                  proxy_set_header Host \$host;
                  proxy_set_header X-Real-IP \$remote_addr;
                  proxy_set_header X-Forwarded-For \$proxy_add_x_forwarded_for;
              }
          }
          EOF

          # Connect the containers to the Nginx network
          docker network connect --alias frontend-${{ steps.preview.outputs.preview_id }} nginx-proxy ${{ steps.preview.outputs.preview_id }}_frontend_1
          docker network connect --alias backend-${{ steps.preview.outputs.preview_id }} nginx-proxy ${{ steps.preview.outputs.preview_id }}_backend_1

          # Reload Nginx to apply the new configuration
          docker exec nginx-proxy nginx -s reload

      - name: Comment on PR with preview URL
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_PAT }}
          script: |
            const previewUrl = 'http://${{ steps.preview.outputs.domain }}';
            const apiUrl = 'http://${{ steps.preview.outputs.api_domain }}';

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## ðŸš€ Preview Environment Deployed!

              Your changes can be previewed at:
              - **Frontend**: [${previewUrl}](${previewUrl})
              - **API**: [${apiUrl}](${apiUrl})

              This preview environment will be automatically removed when the PR is closed.`
            });

  cleanup-preview:
    runs-on: self-hosted
    if: github.event.action == 'closed'

    steps:
      - name: Generate preview ID
        id: preview
        run: |
          PR_NUMBER=${{ github.event.pull_request.number }}
          PREVIEW_ID="pr-${PR_NUMBER}"
          echo "preview_id=${PREVIEW_ID}" >> $GITHUB_OUTPUT

      - name: Remove preview environment
        run: |
          PREVIEW_DIR="/opt/preview-environments/${{ steps.preview.outputs.preview_id }}"

          if [ -d "$PREVIEW_DIR" ]; then
            # Disconnect from Nginx network before removing
            docker network disconnect nginx-proxy ${{ steps.preview.outputs.preview_id }}_frontend_1 || true
            docker network disconnect nginx-proxy ${{ steps.preview.outputs.preview_id }}_backend_1 || true

            # Remove the containers
            cd $PREVIEW_DIR
            docker-compose down -v --remove-orphans

            # Remove the directory
            cd /opt/preview-environments
            rm -rf $PREVIEW_DIR
          fi

          # Remove the Nginx configuration
          rm -f /opt/nginx-proxy/conf.d/${{ steps.preview.outputs.preview_id }}.conf

          # Reload Nginx to apply the changes
          docker exec nginx-proxy nginx -s reload

          # Clean up Docker images
          docker rmi kaneo-api-preview:${{ steps.preview.outputs.preview_id }} || true
          docker rmi kaneo-web-preview:${{ steps.preview.outputs.preview_id }} || true